-- ============================================================================
-- Custom Dark Orchid Theme
-- ============================================================================
-- A purple-focused theme inspired by Dark Orchid
-- https://github.com/dark-orchid/neovim.git
-- Built from scratch to avoid plugin compatibility issues
-- This is generated by an LLM based on the Dark Orchid color palette
-- Use the original plugin if it works for you
-- ============================================================================

local M = {}

-- Dark Orchid Color Palette
M.colors = {
    -- None
    none = "NONE",
    
    -- Purple/Fuchsia (Primary theme colors)
    purple_500 = "#7300ff",   -- Main purple (Dark Orchid)
    purple_200 = "#c799ff",   -- Light purple
    fuchsia_200 = "#f5d0fe",  -- Lightest purple/pink
    fuchsia_300 = "#f0abfc",  -- Light purple/pink
    fuchsia_400 = "#e879f9",  -- Medium purple/pink
    
    -- Grayscale (Base colors)
    white = "#ffffff",
    black = "#000000",
    zinc_200 = "#e4e4e7",     -- Very light gray
    zinc_300 = "#d4d4d8",     -- Light gray
    zinc_400 = "#a1a1aa",     -- Medium-light gray
    zinc_500 = "#71717a",     -- Medium gray
    zinc_600 = "#52525b",     -- Medium-dark gray
    zinc_700 = "#3f3f46",     -- Dark gray
    zinc_800 = "#27272a",     -- Very dark gray
    zinc_900 = "#18181b",     -- Almost black
    zinc_950 = "#09090b",     -- Darkest
    
    -- Accent colors
    yellow_200 = "#fef08a",   -- Light yellow
    yellow_500 = "#eab308",   -- Medium yellow
    yellow_600 = "#ca8a04",   -- Warning yellow
    red_600 = "#dc2626",      -- Error red
    blue_200 = "#bfdbfe",     -- Light blue
    blue_400 = "#60a5fa",     -- Info blue
    green_600 = "#16a34a",    -- Success green
    green_950 = "#052e16",    -- Dark green (for diffs)
}

-- Helper function to set highlights
local function hl(group, opts)
    vim.api.nvim_set_hl(0, group, opts)
end

-- Apply the theme
function M.setup()
    local colors = M.colors

    -- Clear existing highlights
    vim.cmd("highlight clear")
    if vim.fn.exists("syntax_on") then
        vim.cmd("syntax reset")
    end

    vim.o.termguicolors = true
    vim.g.colors_name = "orchid"

    -- ============================================================================
    -- Editor UI
    -- ============================================================================
    hl("Normal", { fg = colors.zinc_200, bg = colors.none })
    hl("NormalNC", { fg = colors.zinc_300, bg = colors.none })
    hl("NormalFloat", { fg = colors.zinc_200, bg = colors.zinc_900 })
    hl("FloatBorder", { fg = colors.purple_500, bg = colors.zinc_900 })

    hl("Cursor", { fg = colors.black, bg = colors.purple_500 })
    hl("CursorLine", { bg = colors.zinc_900 })
    hl("CursorLineNr", { fg = colors.purple_500, bold = true })
    hl("LineNr", { fg = colors.zinc_600 })
    hl("SignColumn", { fg = colors.zinc_600, bg = colors.none })

    hl("Visual", { bg = colors.zinc_800 })
    hl("VisualNOS", { bg = colors.zinc_800 })
    hl("Search", { fg = colors.black, bg = colors.yellow_500 })
    hl("IncSearch", { fg = colors.black, bg = colors.purple_500 })

    hl("Pmenu", { fg = colors.zinc_200, bg = colors.zinc_900 })
    hl("PmenuSel", { fg = colors.white, bg = colors.purple_500 })
    hl("PmenuSbar", { bg = colors.zinc_800 })
    hl("PmenuThumb", { bg = colors.purple_500 })

    hl("StatusLine", { fg = colors.zinc_200, bg = colors.zinc_900 })
    hl("StatusLineNC", { fg = colors.zinc_600, bg = colors.zinc_950 })
    hl("TabLine", { fg = colors.zinc_400, bg = colors.zinc_900 })
    hl("TabLineFill", { bg = colors.zinc_950 })
    hl("TabLineSel", { fg = colors.white, bg = colors.purple_500 })

    hl("VertSplit", { fg = colors.zinc_800, bg = colors.none })
    hl("WinSeparator", { fg = colors.zinc_800, bg = colors.none })

    hl("ColorColumn", { bg = colors.zinc_900 })
    hl("Folded", { fg = colors.zinc_500, bg = colors.zinc_900 })
    hl("FoldColumn", { fg = colors.zinc_600, bg = colors.none })

    -- ============================================================================
    -- Syntax Highlighting
    -- ============================================================================
    hl("Comment", { fg = colors.zinc_500, italic = true })
    hl("Todo", { fg = colors.yellow_500, bold = true })

    hl("Constant", { fg = colors.fuchsia_300 })
    hl("String", { fg = colors.fuchsia_200 })
    hl("Character", { fg = colors.fuchsia_300 })
    hl("Number", { fg = colors.purple_200 })
    hl("Boolean", { fg = colors.purple_200, bold = true })
    hl("Float", { fg = colors.purple_200 })

    hl("Identifier", { fg = colors.zinc_200 })
    hl("Function", { fg = colors.purple_500, bold = true })

    hl("Statement", { fg = colors.fuchsia_400, bold = true })
    hl("Conditional", { fg = colors.fuchsia_400, bold = true })
    hl("Repeat", { fg = colors.fuchsia_400, bold = true })
    hl("Label", { fg = colors.fuchsia_400 })
    hl("Operator", { fg = colors.zinc_300 })
    hl("Keyword", { fg = colors.fuchsia_400, bold = true })
    hl("Exception", { fg = colors.red_600, bold = true })

    hl("PreProc", { fg = colors.purple_200 })
    hl("Include", { fg = colors.purple_200 })
    hl("Define", { fg = colors.purple_200 })
    hl("Macro", { fg = colors.purple_200 })
    hl("PreCondit", { fg = colors.purple_200 })

    hl("Type", { fg = colors.blue_400 })
    hl("StorageClass", { fg = colors.blue_400, bold = true })
    hl("Structure", { fg = colors.blue_400 })
    hl("Typedef", { fg = colors.blue_400 })

    hl("Special", { fg = colors.yellow_500 })
    hl("SpecialChar", { fg = colors.yellow_500 })
    hl("Tag", { fg = colors.purple_500 })
    hl("Delimiter", { fg = colors.zinc_400 })
    hl("SpecialComment", { fg = colors.zinc_500, italic = true })
    hl("Debug", { fg = colors.red_600 })

    -- ============================================================================
    -- Diagnostic
    -- ============================================================================
    hl("DiagnosticError", { fg = colors.red_600 })
    hl("DiagnosticWarn", { fg = colors.yellow_600 })
    hl("DiagnosticInfo", { fg = colors.blue_400 })
    hl("DiagnosticHint", { fg = colors.purple_200 })

    hl("DiagnosticUnderlineError", { undercurl = true, sp = colors.red_600 })
    hl("DiagnosticUnderlineWarn", { undercurl = true, sp = colors.yellow_600 })
    hl("DiagnosticUnderlineInfo", { undercurl = true, sp = colors.blue_400 })
    hl("DiagnosticUnderlineHint", { undercurl = true, sp = colors.purple_200 })

    -- ============================================================================
    -- LSP
    -- ============================================================================
    hl("LspReferenceText", { bg = colors.zinc_800 })
    hl("LspReferenceRead", { bg = colors.zinc_800 })
    hl("LspReferenceWrite", { bg = colors.zinc_800 })

    -- ============================================================================
    -- Git Signs
    -- ============================================================================
    hl("GitSignsAdd", { fg = colors.green_600 })
    hl("GitSignsChange", { fg = colors.yellow_500 })
    hl("GitSignsDelete", { fg = colors.red_600 })

    hl("DiffAdd", { bg = colors.green_950 })
    hl("DiffChange", { bg = colors.zinc_800 })
    hl("DiffDelete", { fg = colors.red_600, bg = colors.zinc_950 })
    hl("DiffText", { bg = colors.zinc_700 })

    -- ============================================================================
    -- Treesitter
    -- ============================================================================
    hl("@variable", { fg = colors.zinc_200 })
    hl("@variable.builtin", { fg = colors.purple_200 })
    hl("@variable.parameter", { fg = colors.zinc_300 })
    hl("@variable.member", { fg = colors.zinc_200 })

    hl("@constant", { fg = colors.fuchsia_300 })
    hl("@constant.builtin", { fg = colors.purple_200 })
    hl("@module", { fg = colors.blue_400 })

    hl("@string", { fg = colors.fuchsia_200 })
    hl("@string.escape", { fg = colors.yellow_500 })
    hl("@string.regexp", { fg = colors.yellow_500 })

    hl("@character", { fg = colors.fuchsia_300 })
    hl("@number", { fg = colors.purple_200 })
    hl("@boolean", { fg = colors.purple_200, bold = true })
    hl("@float", { fg = colors.purple_200 })

    hl("@function", { fg = colors.purple_500, bold = true })
    hl("@function.builtin", { fg = colors.purple_500 })
    hl("@function.call", { fg = colors.purple_500 })
    hl("@function.macro", { fg = colors.purple_200 })
    hl("@function.method", { fg = colors.purple_500 })

    hl("@keyword", { fg = colors.fuchsia_400, bold = true })
    hl("@keyword.function", { fg = colors.fuchsia_400, bold = true })
    hl("@keyword.operator", { fg = colors.fuchsia_400 })
    hl("@keyword.return", { fg = colors.fuchsia_400, bold = true })

    hl("@conditional", { fg = colors.fuchsia_400, bold = true })
    hl("@repeat", { fg = colors.fuchsia_400, bold = true })
    hl("@label", { fg = colors.fuchsia_400 })

    hl("@operator", { fg = colors.zinc_300 })
    hl("@exception", { fg = colors.red_600, bold = true })

    hl("@type", { fg = colors.blue_400 })
    hl("@type.builtin", { fg = colors.blue_400 })
    hl("@type.definition", { fg = colors.blue_400 })

    hl("@property", { fg = colors.zinc_200 })
    hl("@attribute", { fg = colors.purple_200 })

    hl("@constructor", { fg = colors.blue_400 })
    hl("@namespace", { fg = colors.blue_400 })

    hl("@comment", { fg = colors.zinc_500, italic = true })
    hl("@comment.todo", { fg = colors.yellow_500, bold = true })

    hl("@tag", { fg = colors.purple_500 })
    hl("@tag.attribute", { fg = colors.purple_200 })
    hl("@tag.delimiter", { fg = colors.zinc_400 })

    -- ============================================================================
    -- Telescope
    -- ============================================================================
    hl("TelescopeNormal", { fg = colors.zinc_200, bg = colors.zinc_900 })
    hl("TelescopeBorder", { fg = colors.purple_500, bg = colors.zinc_900 })
    hl("TelescopePromptNormal", { fg = colors.zinc_200, bg = colors.zinc_900 })
    hl("TelescopePromptBorder", { fg = colors.purple_500, bg = colors.zinc_900 })
    hl("TelescopePromptTitle", { fg = colors.white, bg = colors.purple_500, bold = true })
    hl("TelescopePreviewTitle", { fg = colors.white, bg = colors.purple_500, bold = true })
    hl("TelescopeResultsTitle", { fg = colors.white, bg = colors.purple_500, bold = true })
    hl("TelescopeSelection", { fg = colors.white, bg = colors.purple_500 })
    hl("TelescopeSelectionCaret", { fg = colors.purple_500 })
    hl("TelescopeMatching", { fg = colors.yellow_500, bold = true })

    -- ============================================================================
    -- nvim-cmp
    -- ============================================================================
    hl("CmpItemAbbrMatch", { fg = colors.purple_500, bold = true })
    hl("CmpItemAbbrMatchFuzzy", { fg = colors.purple_200 })
    hl("CmpItemKind", { fg = colors.fuchsia_400 })
    hl("CmpItemMenu", { fg = colors.zinc_500 })

    -- ============================================================================
    -- nvim-tree
    -- ============================================================================
    hl("NvimTreeNormal", { fg = colors.zinc_200, bg = colors.none })
    hl("NvimTreeFolderName", { fg = colors.purple_500 })
    hl("NvimTreeFolderIcon", { fg = colors.purple_500 })
    hl("NvimTreeOpenedFolderName", { fg = colors.purple_200, bold = true })
    hl("NvimTreeEmptyFolderName", { fg = colors.zinc_600 })
    hl("NvimTreeRootFolder", { fg = colors.fuchsia_400, bold = true })
    hl("NvimTreeSpecialFile", { fg = colors.yellow_500 })
    hl("NvimTreeExecFile", { fg = colors.green_600, bold = true })
    hl("NvimTreeGitDirty", { fg = colors.yellow_500 })
    hl("NvimTreeGitNew", { fg = colors.green_600 })
    hl("NvimTreeGitDeleted", { fg = colors.red_600 })

    -- ============================================================================
    -- Indent Blankline
    -- ============================================================================
    hl("IblIndent", { fg = colors.zinc_800 })
    hl("IblScope", { fg = colors.purple_500 })

    -- ============================================================================
    -- WhichKey
    -- ============================================================================
    hl("WhichKey", { fg = colors.purple_500, bold = true })
    hl("WhichKeyGroup", { fg = colors.fuchsia_400 })
    hl("WhichKeyDesc", { fg = colors.zinc_200 })
    hl("WhichKeySeparator", { fg = colors.zinc_600 })
    hl("WhichKeyFloat", { bg = colors.zinc_900 })

    -- ============================================================================
    -- Noice
    -- ============================================================================
    hl("NoiceCmdlinePopup", { fg = colors.zinc_200, bg = colors.zinc_900 })
    hl("NoiceCmdlinePopupBorder", { fg = colors.purple_500, bg = colors.zinc_900 })
    hl("NoiceCmdlineIcon", { fg = colors.purple_500 })

    -- ============================================================================
    -- Bufferline
    -- ============================================================================
    hl("BufferLineIndicatorSelected", { fg = colors.purple_500 })
    hl("BufferLineFill", { bg = colors.zinc_950 })
    hl("BufferLineBufferSelected", { fg = colors.white, bg = colors.none, bold = true })
    hl("BufferLineBufferVisible", { fg = colors.zinc_400, bg = colors.zinc_900 })

    -- ============================================================================
    -- Lualine (will be picked up automatically)
    -- ============================================================================
    vim.g.lualine_theme = {
        normal = {
            a = { fg = colors.white, bg = colors.purple_500, gui = "bold" },
            b = { fg = colors.zinc_200, bg = colors.zinc_800 },
            c = { fg = colors.zinc_400, bg = colors.none },
        },
        insert = {
            a = { fg = colors.white, bg = colors.green_600, gui = "bold" },
        },
        visual = {
            a = { fg = colors.white, bg = colors.fuchsia_400, gui = "bold" },
        },
        replace = {
            a = { fg = colors.white, bg = colors.red_600, gui = "bold" },
        },
        command = {
            a = { fg = colors.white, bg = colors.yellow_600, gui = "bold" },
        },
        inactive = {
            a = { fg = colors.zinc_600, bg = colors.zinc_950 },
            b = { fg = colors.zinc_600, bg = colors.zinc_950 },
            c = { fg = colors.zinc_600, bg = colors.none },
        },
    }

    -- ============================================================================
    -- Terminal Colors
    -- ============================================================================
    vim.g.terminal_color_0 = colors.zinc_950
    vim.g.terminal_color_1 = colors.red_600
    vim.g.terminal_color_2 = colors.green_600
    vim.g.terminal_color_3 = colors.yellow_500
    vim.g.terminal_color_4 = colors.blue_400
    vim.g.terminal_color_5 = colors.fuchsia_400
    vim.g.terminal_color_6 = colors.purple_200
    vim.g.terminal_color_7 = colors.zinc_200
    vim.g.terminal_color_8 = colors.zinc_700
    vim.g.terminal_color_9 = colors.red_600
    vim.g.terminal_color_10 = colors.green_600
    vim.g.terminal_color_11 = colors.yellow_500
    vim.g.terminal_color_12 = colors.blue_400
    vim.g.terminal_color_13 = colors.fuchsia_400
    vim.g.terminal_color_14 = colors.purple_200
    vim.g.terminal_color_15 = colors.white
end

return M
